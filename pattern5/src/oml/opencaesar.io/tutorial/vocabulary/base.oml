@dc:title "Base Vocabulary Tutorial"
@dc:creator "ModelWare"
@dc:rights "Copyright 2021, by ModelWare"
vocabulary <http://opencaesar.io/tutorial/vocabulary/base> with # as base {

	extends <http://www.w3.org/2002/07/owl>
	
 	@rdfs:label "IdentifiedThing"
	@dc:^description """An [=IdentifiedThing=] is a thing with identity and identifying properties."""
	aspect IdentifiedThing

	@rdfs:label "hasCanonicalName"
	scalar property hasCanonicalName [
		domain IdentifiedThing
		range xsd:string
	]

	@rdfs:label "hasIdentifier"
	scalar property hasIdentifier [
		domain IdentifiedThing
		range xsd:string
	]

	@rdfs:label "hasDescription"
	scalar property hasDescription [
		domain IdentifiedThing
		range xsd:string
	]

 	@rdfs:label "AggregatedThing"
	@dc:^description """An [=AggregatedThing=] is a thing that can participate in homeomeric aggregation relationships."""
	aspect AggregatedThing

	@rdfs:label "Aggregates"
	@dc:^description """[=aggregates=] is a many-to-many relation used
	to represent homeomeric relations that form directed acyclic graphs."""
    relation entity Aggregates [
		from AggregatedThing
    	to AggregatedThing
    	forward aggregates
    	reverse isAggregatedIn
    	asymmetric
    	irreflexive
	]

 	@rdfs:label "ContainedThing"
	@dc:^description """A [=ContainedThing=] is a thing that can participate in homeomeric containment relationships."""
	aspect ContainedThing

	@rdfs:label "Contains"
	@dc:^description """[=contains=] is a many-to-many relation used
	to represent homeomeric relations that form directed rooted trees."""
	relation entity Contains [
		from ContainedThing
    	to ContainedThing
		forward contains
		@rdfs:label "is contained in"
		reverse isContainedIn
		inverse functional
		asymmetric
		irreflexive
	]

}
