buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath 'io.opencaesar.owl:owl-fuseki-gradle:+'
    classpath 'io.opencaesar.owl:owl-shacl-fuseki-gradle:+'
    classpath 'io.opencaesar.owl:owl-query-gradle:+'
    classpath 'io.opencaesar.owl:owl-load-gradle:+'
    classpath 'io.opencaesar.owl:owl-reason-gradle:+'
    classpath 'io.opencaesar.adapters:oml2owl-gradle:1.+'
    classpath 'io.opencaesar.oml:oml-bikeshed-gradle:1.+'
    classpath 'io.opencaesar.oml:oml-merge-gradle:1.+'
  }
}
plugins {
    id 'com.palantir.git-version' version '0.12.3'
}

apply plugin: 'eclipse'
apply plugin: 'idea'

/*
 * Start the headless Fuseki server
 */
task startFuseki(type: io.opencaesar.owl.fuseki.StartFusekiTask, group:"fuseki") {
    configurationPath = file('.fuseki.ttl')
    outputFolderPath = file('.fuseki')
}

/*
 * Stop the headless Fuseki server
 */
task stopFuseki(type: io.opencaesar.owl.fuseki.StopFusekiTask, group:"fuseki") {
    outputFolderPath = file('.fuseki')
}

subprojects {

  group 'io.modelware.oml.tutorial'

  apply plugin: 'eclipse'
  apply plugin: 'idea'

  repositories {
      mavenLocal()
      mavenCentral()
  }

  /*
   * A task to delete the build artifacts
   */
  task clean(type: Delete, group:"oml") {
      delete 'build'
  }

  /*
   * Publish to Maven spec
   */
  apply plugin: 'maven-publish'
  
  task omlZip(type: Zip, group:"oml") {
    from file('src/oml')
    include "**/*.oml"
    destinationDirectory = file('build/libs')
    archiveBaseName = project.name
    archiveVersion = project.version
  }
  
  publishToMavenLocal.dependsOn omlZip
  
  publishing {
      publications {
          maven(MavenPublication) {
          artifact omlZip
          pom.withXml {
                  def dependencies = asNode().appendNode('dependencies')
                  configurations.oml.allDependencies.stream().each {
                      def dependency = dependencies.appendNode('dependency')
                      dependency.appendNode('groupId', it.group)
                      dependency.appendNode('artifactId', it.name)
                      dependency.appendNode('version', it.version)
                  }
              }
          }
      }
  }
  
}
